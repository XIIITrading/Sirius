//@version=6
indicator("Pre-Market Levels & Zones", overlay=true, max_lines_count=500, max_boxes_count=500)

// ==================== SETTINGS ====================

// ATR Settings
atr_timeframe = input.timeframe("5", "ATR Timeframe", options=["1", "5", "15", "30"])
atr_multiplier = input.float(1.0, "ATR Multiplier", minval=0.1, maxval=5.0, step=0.1)

// Category Enable/Disable
enable_daily_structure = input.bool(true, "Enable Daily Market Structure")
enable_hvn = input.bool(true, "Enable HVN Levels")
enable_order_blocks = input.bool(true, "Enable H4 Order Blocks")

// Daily Market Structure Levels
daily_above_1 = input.float(0, "Daily Structure - Above 1", group="Daily Market Structure")
daily_above_2 = input.float(0, "Daily Structure - Above 2", group="Daily Market Structure")
daily_below_1 = input.float(0, "Daily Structure - Below 1", group="Daily Market Structure")
daily_below_2 = input.float(0, "Daily Structure - Below 2", group="Daily Market Structure")

// HVN Levels
hvn_above_1 = input.float(0, "HVN - Above 1", group="HVN Analysis (14-Day)")
hvn_above_2 = input.float(0, "HVN - Above 2", group="HVN Analysis (14-Day)")
hvn_below_1 = input.float(0, "HVN - Below 1", group="HVN Analysis (14-Day)")
hvn_below_2 = input.float(0, "HVN - Below 2", group="HVN Analysis (14-Day)")

// H4 Order Block Levels
ob_above_1 = input.float(0, "Order Block - Above 1", group="H4 Order Blocks")
ob_above_2 = input.float(0, "Order Block - Above 2", group="H4 Order Blocks")
ob_below_1 = input.float(0, "Order Block - Below 1", group="H4 Order Blocks")
ob_below_2 = input.float(0, "Order Block - Below 2", group="H4 Order Blocks")

// ==================== STYLING ====================

// Daily Market Structure Colors
daily_line_color = input.color(color.new(color.red, 0), "Line Color", group="Daily Structure Styling")
daily_zone_color = input.color(color.new(color.red, 85), "Zone Color", group="Daily Structure Styling")

// HVN Colors
hvn_line_color = input.color(color.new(color.blue, 0), "Line Color", group="HVN Styling")
hvn_zone_color = input.color(color.new(color.blue, 85), "Zone Color", group="HVN Styling")

// Order Block Colors
ob_line_color = input.color(color.new(color.orange, 0), "Line Color", group="Order Block Styling")
ob_zone_color = input.color(color.new(color.orange, 85), "Zone Color", group="Order Block Styling")

// ==================== ATR CALCULATION ====================

atr_value = request.security(syminfo.tickerid, atr_timeframe, ta.atr(14))

// ==================== FUNCTIONS ====================

// Function to draw level and zone
draw_level_and_zone(price, line_color, zone_color, level_name) =>
    if price > 0
        // Draw horizontal line
        level_line = line.new(
             x1=bar_index - 100, 
             y1=price, 
             x2=bar_index + 100, 
             y2=price,
             color=line_color, 
             width=2,
             style=line.style_solid,
             extend=extend.both)
        
        // Calculate zone boundaries
        upper_zone = price + (atr_value * atr_multiplier)
        lower_zone = price - (atr_value * atr_multiplier)
        
        // Draw zone rectangle
        zone_box = box.new(
             left=bar_index - 50,
             top=upper_zone,
             right=bar_index + 50,
             bottom=lower_zone,
             bgcolor=zone_color,
             border_color=line_color,
             border_width=1,
             extend=extend.both)
        
        // Add label
        level_label = label.new(
             x=bar_index,
             y=price,
             text=level_name + "\n" + str.tostring(price, "#.##"),
             color=line_color,
             textcolor=color.white,
             style=label.style_label_left,
             size=size.small)

// ==================== DRAW LEVELS ====================

if barstate.islast
    // Daily Market Structure Levels
    if enable_daily_structure
        draw_level_and_zone(daily_above_1, daily_line_color, daily_zone_color, "DS-A1")
        draw_level_and_zone(daily_above_2, daily_line_color, daily_zone_color, "DS-A2")
        draw_level_and_zone(daily_below_1, daily_line_color, daily_zone_color, "DS-B1")
        draw_level_and_zone(daily_below_2, daily_line_color, daily_zone_color, "DS-B2")
    
    // HVN Levels
    if enable_hvn
        draw_level_and_zone(hvn_above_1, hvn_line_color, hvn_zone_color, "HVN-A1")
        draw_level_and_zone(hvn_above_2, hvn_line_color, hvn_zone_color, "HVN-A2")
        draw_level_and_zone(hvn_below_1, hvn_line_color, hvn_zone_color, "HVN-B1")
        draw_level_and_zone(hvn_below_2, hvn_line_color, hvn_zone_color, "HVN-B2")
    
    // Order Block Levels
    if enable_order_blocks
        draw_level_and_zone(ob_above_1, ob_line_color, ob_zone_color, "OB-A1")
        draw_level_and_zone(ob_above_2, ob_line_color, ob_zone_color, "OB-A2")
        draw_level_and_zone(ob_below_1, ob_line_color, ob_zone_color, "OB-B1")
        draw_level_and_zone(ob_below_2, ob_line_color, ob_zone_color, "OB-B2")

// ==================== INFORMATION TABLE ====================

if barstate.islast
    var info_table = table.new(position.top_right, 2, 4, bgcolor=color.new(color.black, 80), border_width=1)
    
    table.cell(info_table, 0, 0, "Category", text_color=color.white, bgcolor=color.new(color.gray, 50))
    table.cell(info_table, 1, 0, "Active Levels", text_color=color.white, bgcolor=color.new(color.gray, 50))
    
    daily_count = (daily_above_1 > 0 ? 1 : 0) + (daily_above_2 > 0 ? 1 : 0) + (daily_below_1 > 0 ? 1 : 0) + (daily_below_2 > 0 ? 1 : 0)
    hvn_count = (hvn_above_1 > 0 ? 1 : 0) + (hvn_above_2 > 0 ? 1 : 0) + (hvn_below_1 > 0 ? 1 : 0) + (hvn_below_2 > 0 ? 1 : 0)
    ob_count = (ob_above_1 > 0 ? 1 : 0) + (ob_above_2 > 0 ? 1 : 0) + (ob_below_1 > 0 ? 1 : 0) + (ob_below_2 > 0 ? 1 : 0)
    
    table.cell(info_table, 0, 1, "Daily Structure", text_color=daily_line_color)
    table.cell(info_table, 1, 1, str.tostring(daily_count) + "/4", text_color=color.white)
    
    table.cell(info_table, 0, 2, "HVN Analysis", text_color=hvn_line_color)
    table.cell(info_table, 1, 2, str.tostring(hvn_count) + "/4", text_color=color.white)
    
    table.cell(info_table, 0, 3, "Order Blocks", text_color=ob_line_color)
    table.cell(info_table, 1, 3, str.tostring(ob_count) + "/4", text_color=color.white)